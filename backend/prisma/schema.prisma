generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DEVELOPMENT_DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  firstName String
  lastName  String

  createdAt DateTime  @default(now())
  accounts  Account[]

  @@map("users")
}

model Account {
  id     String @id @default(uuid())
  userId String

  user         User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  email        String          @unique
  password     String?
  refreshToken String?
  provider     AccountProvider @default(Credentails)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  forms     Form[]

  @@index([userId])
  @@map("accounts")
}

model Form {
  id        String  @id @default(uuid())
  accountId String
  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  title       String
  description String?

  fields String?

  submissions Int @default(0)
  visits      Int @default(0)

  publicUrl String @default(uuid())

  publishedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deletedAt       DateTime?
  formSubmissions FormSubmission[]

  @@index([accountId])
  @@map("forms")
}

model FormSubmission {
  id String @id @default(uuid())

  formId String

  form Form @relation(fields: [formId], references: [id], onDelete: Cascade)

  email       String?
  name        String?
  submittedAt DateTime @default(now())

  @@map("form_submissions")
}

enum AccountProvider {
  Credentails
  Google
}
